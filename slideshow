#!/bin/bash
SLIDESHOW_FOLDER="$HOME/Slideshow"
SLIDESHOW_FILE="$HOME/slideshow-file"

[[ -z "$LOGFILE" ]] && \
	LOGFILE="/dev/null"

export DISPLAY=":0"

mkdir -p "$SLIDESHOW_FOLDER"

fatal() {
	echo -e "FATAL: $1"
	exit 1
}

warning() {
	echo -e "ERROR: $1"
}

updateSlideshowFile() {
	find "$SLIDESHOW_FOLDER" -type f | sort | sed -e 's/^/@/' -e 's/$/\n/' > "$SLIDESHOW_FILE"

    # Remove all files except for png, jpg and jpeg
    sed -i -E '/.*\.(png|jpe?g)$/I!d; s/$/\n/' "$SLIDESHOW_FILE"

	[[ ! -s "$SLIDESHOW_FILE" ]] && \
		fatal "No slides found in '$SLIDESHOW_FOLDER'"
}

validateSlideshowFile() {
    TMP="/tmp/slideshow-tmp-file-$(date +'%s')"

    cat "$SLIDESHOW_FILE" | sed -e "/^$/d" | cut -c 2- > "$TMP"

    while IFS= read -r line; do
        stat "$line" &> /dev/null || \
            fatal "File does not exist. Run 'update' command: $line"
    done < "$TMP"
}

startSlideshow() {
	timeout 1s xset q &> /dev/null || \
		fatal "No X server running"

	[[ ! -e "$SLIDESHOW_FILE" ]] && \
		fatal "No slideshow file found, run first with 'update' command"

	pidof sent > /dev/null && \
		fatal "Slideshow already running"

	sent "$SLIDESHOW_FILE" &> "$LOGFILE" &
}

killSlideshow() {
	PID="$(pidof sent)"

	[[ -z "$PID" ]] && \
		fatal "No 'sent' instance running"

	kill "$PID"
	sleep "0.5s"

	PID="$(pidof sent)"

	[[ -n "$PID" ]] && \
		fatal "Could not terminate 'sent' with pid $PID"
}

printHelp() {
	echo -e "usage: kiltisbulletin.sh COMMAND\n"
	echo -e "Available commands:"
	echo -e "  update\tUpdates slideshow config"
	echo -e "  start\t\tStarts the slideshow"
	echo -e "  kill\t\tTerminates running slideshow"
}

COMMAND="$(echo $1 | tr '[:upper:]' '[:lower:]')"

case "$COMMAND" in
    "update")
        updateSlideshowFile
        exit
        ;;
    "start")
        validateSlideshowFile
        startSlideshow
        exit
        ;;
    "kill")
        killSlideshow
        exit
        ;;
    *)
	printHelp
	exit 1
	;;
esac

